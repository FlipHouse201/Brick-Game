/**
 * Every word that follows "var" is a variable. it's like a box with a name on it. This box will contain some data. It can be a word, a number, or an HTML object like the tag canvas
 * Below you will find all the variable "boxes" that contain the information for the game to behave and work in a certain way.
 */

//######################## BEGINNING OF THE VARIABLES SETTINGS #################################
// this line will get the tag <canvas> in the HTML file so we can use it
var canvas = document.getElementById("myCanvas");
// this line tells that we will create an 2D game. 3D will be when you know more math ;-)
var ctx = canvas.getContext("2d");
// Define the radius of a ball
var ballRadius = 7;
// Horizontal position of the ball when we start
var x = canvas.width / 2;
// Vertical position of the ball when we start
var y = canvas.height - 30;
// Horizontal speed of the ball. Increase for more stamina
var dx = 3.5;
// Vertical speed ot the ball. Increase for more madness
var dy = -3.5;
// The height of the paddle.
var paddleHeight = 10;
// The width of the paddle. Don't make it to big you cheater  !!! :-)
var paddleWidth = 105;
// The Horizontal position of the paddle in the beginning
var paddleX = (canvas.width - paddleWidth) / 2;
// Setting the state of the right arrow key in the beginning of the game
var rightPressed = false;
// Setting the state of the left arrow key in the beginning of the game
var leftPressed = false;
// Number of row of brick
var brickRowCount = 21;
// Number of column of brick
var brickColumnCount = 5;
// The width of a brick. Make it smaller to improve your aiming then you can increase the number of rows and column of bricks
var brickWidth = 75;
// The width of a brick. Make it smaller to improve your aiming then you can increase the number of rows and column of bricks
var brickHeight = 20;
// The space between each brick
var brickPadding = 11;
// The space between the top and the bricks
var brickOffsetTop = 30;
// The space between the left wall and the bricks
var brickOffsetLeft = 30;
// The score of the beginning
var score = 0;
// The number of lives you start with. Decrease to one... it will be insane mouahahahaha
var lives = 3;
// The message that you will receive when you win
var messageWin = "YOU WIN, CONGRATS!";
// The message that you will receive when you lose
var messageGameOver = "GAME OVER";
// The color of the ball
var ballColor = "#0095DD";
// The color of the paddle
var paddleColor = "#0095DD";
// The color of the brick
var brickColor = getRandomColor()
// The color of the score
var scoreColor = "#0095DD";
// The color of the lives
var liveColor = "#0095DD";
// CODE TO PAUSE 1/3
var pause = false;
var dx_before_pause = dx;
var dy_before_pause = dy;
//######################## END OF THE VARIABLES SETTINGS #################################

//!!!!!!!!!!!!!!!! CAUTION, DON'T TOUCH WHAT'S BELOW THIS LINE!!!!!!!!!!!!!!!!!!!!!!
var bricks = [];
for (var c = 0; c < brickColumnCount; c++) {
    bricks[c] = [];
    for (var r = 0; r < brickRowCount; r++) {
        bricks[c][r] = { x: 0, y: 0, status: 1 };
    }
}

document.addEventListener("keydown", keyDownHandler, false);
document.addEventListener("keyup", keyUpHandler, false);
document.addEventListener("mousemove", mouseMoveHandler, false);

function keyDownHandler(e) {
    if (e.key == "Right" || e.key == "ArrowRight") {
        rightPressed = true;
    } else if (e.key == "Left" || e.key == "ArrowLeft") {
        leftPressed = true;
    }

    // COVE TO PAUSE 2/3
    else if (e.keyCode== 32 ){
        pause = !pause

            if(pause) {
                dx_before_pause = dx;
                dy_before_pause = dy;

                dx = 0;
                dy = 0;

                ctx.font = "300px Courier";
                ctx.fillstyle ="white";
                ctx.fillText("PAUSE", canvas.width / 2 - 500, canvas.height / 2 + 200);

            }  else {
                dx = dx_before_pause;
                dy = dy_before_pause;
            }
    }
}

function getRandomColor() {
    var letters = '0123456789ABCDEF';
    var color = '#';
    for (var i = 0; i < 6; i++) {
      color += letters[Math.floor(Math.random() * 16)];
    }
    return color;

  }

function keyUpHandler(e) {
    if (e.key == "Right" || e.key == "ArrowRight") {
        rightPressed = false;
    } else if (e.key == "Left" || e.key == "ArrowLeft") {
        leftPressed = false;
    }
}

function mouseMoveHandler(e) {
    var relativeX = e.clientX - canvas.offsetLeft;
    if (relativeX > 0 && relativeX < canvas.width) {
        paddleX = relativeX - paddleWidth / 2;
    }
}
function collisionDetection() {
    for (var c = 0; c < brickColumnCount; c++) {
        for (var r = 0; r < brickRowCount; r++) {
            var b = bricks[c][r];
            if (b.status == 1) {
                if (
       RectCircleColliding(b)
                ) {
                    dy = -dy;
                    b.status = 0;
                    score++;
                    if (score == brickRowCount * brickColumnCount) {
                      //  alert(messageWin);
                      //  document.location.reload();
                    }
                }
            }
        }
    }
}

//better collision

function RectCircleColliding(rect){
    var distX = Math.abs(x - rect.x-brickWidth/2);
    var distY = Math.abs(y - rect.y-brickHeight/2);

    if(distX > (brickWidth/2 + ballRadius)) return false;
    if(distY > (brickHeight/2 + ballRadius)) return false;

    if(distX <= (brickWidth/2)) { return true; }
    if(distY <= (brickHeight/2)) { return true; }

    var dx=distX-brickWidth/2;
    var dy=distY-brickHeight/2;
    return (dx*dx+dy*dy<=(ballRaduis*ballRadius));
}

function drawBall() {
    ctx.beginPath();
    ctx.arc(x, y, ballRadius, 0, Math.PI * 2);
    ctx.fillStyle = ballColor;
    ctx.fill();
    ctx.closePath();
}
function drawPaddle() {
    ctx.beginPath();
    ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight);
    ctx.fillStyle = paddleColor;
    ctx.fill();
    ctx.closePath();
}
function drawBricks() {
    for (var c = 0; c < brickColumnCount; c++) {
        for (var r = 0; r < brickRowCount; r++) {
            if (bricks[c][r].status == 1) {
                var brickX = r * (brickWidth + brickPadding) + brickOffsetLeft;
                var brickY = c * (brickHeight + brickPadding) + brickOffsetTop;
                bricks[c][r].x = brickX;
                bricks[c][r].y = brickY;
                ctx.beginPath();
                ctx.rect(brickX, brickY, brickWidth, brickHeight);
                ctx.fillStyle = brickColor;
                ctx.fill();
                ctx.closePath();
            }
        }
    }
}
function drawScore() {
    ctx.font = "16px Arial";
    ctx.fillStyle = scoreColor;
    ctx.fillText("Score: " + score, 8, 20);
}
function drawLives() {
    ctx.font = "16px Arial";
    ctx.fillStyle = liveColor;
    ctx.fillText("Lives: " + lives, canvas.width - 65, 20);
}

function draw() {
    //CODE TO PAUSE 3/3
    if(!pause){
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    drawBricks();
    drawBall();
    drawPaddle();
    drawScore();
    drawLives();
    collisionDetection();
    }
    if (x + dx > canvas.width - ballRadius || x + dx < ballRadius) {
        dx = -dx;
    }
    if (y + dy < ballRadius) {
        dy = -dy;
    } else if (y + dy > canvas.height - ballRadius) {
        if (x > paddleX && x < paddleX + paddleWidth) {
            dy = -dy;
        } else {
            lives--;
            if (!lives) {
                alert(messageGameOver);
                document.location.reload();
            } else {
                x = canvas.width / 2;
                y = canvas.height - 30;
                dx = 3;
                dy = -3;
                paddleX = (canvas.width - paddleWidth) / 2;
            }
        }
    }

    if (rightPressed && paddleX < canvas.width - paddleWidth) {
        paddleX += 7;
    } else if (leftPressed && paddleX > 0) {
        paddleX -= 7;
    }

    x += dx;
    y += dy;
    requestAnimationFrame(draw);
}

draw();
